name: Tests

on:
  push:
    branches:
      - dev
  pull_request:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: ['8.0', 8.1, 8.2]

    name: PHP ${{ matrix.php }}
    
    services:
  apache:
    build:
      context: ./dockerfiles
      dockerfile: apache.dockerfile
    ports:
      - ${APACHE_HTTP_IP}:80
      - ${APACHE_HTTPS_IP}:443
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/apache/logs:/var/log/apache2/
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/localhost/
      - /etc/letsencrypt/:/etc/letsencrypt/
    depends_on:
      - mariadb
      - composer
      - npm
      - artisan
      - nginx
      - certbot
      - mailhog
    networks:
      - laravel

  mariadb:
    image: mariadb:latest
    restart: unless-stopped
    tty: true
    ports:
      - ${MARIADB_IP}:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./src/storage/mysql/:/var/lib/mysql
    networks:
      - laravel

  composer:
    image: composer:latest
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages/
    working_dir: /var/www/html
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel
    # user: 1000:1000

  npm:
    image: node:lts-alpine
    volumes:
      - ./src/:/var/www/html:delegated
      - ./src/storage/mysql:/var/lib/mysql
      - ./dockerfiles/localhost/:/var/www/certs
      - ./dockerfiles/npm/logs/:/root/.npm/_logs/
    ports:
      - 3000:3000
      - 13714:13714
      - ${NODE_IP}:5173
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel
    # user: 1000:1000

  redis:
    image: redislabs/rejson:latest
    restart: unless-stopped
    volumes:
      - ./dockerfiles/redis/data:/data
    ports:
      - "6379:6379"
    networks:
      - laravel

  websockets:
    image: php:8.1.4RC1-fpm-alpine
    restart: unless-stopped
    ports:
      - 6001:6001
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/localhost/:/var/www/certs
    working_dir: /var/www/html
    entrypoint: ["php", "artisan", "websockets:serve"]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: artisan.dockerfile
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages
    depends_on:
      - mariadb
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
    # user: 1000:1000

  nginx:
    image: nginx:stable-alpine
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
      HTTP_IP: ${NGINX_HTTP_IP}
      HTTPS_IP: ${NGINX_HTTPS_IP}
    volumes:
      - ./src:/var/www/html:delegated
      - ./dockerfiles/nginx/logs:/var/log/nginx
      - ./dockerfiles/nginx/templates/:/etc/nginx/templates
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/localhost/
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - ${NGINX_HTTP_IP}:80
      - ${NGINX_HTTPS_IP}:443
    networks:
      - laravel

  certbot:
     image: certbot/certbot:latest
     command: certonly --webroot --webroot-path=/var/www/html/public --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${APP_FQDN} -v
     volumes:
       - ./src/:/var/www/html:delegated
       - /etc/letsencrypt/:/etc/letsencrypt/
       - ./dockerfiles/certbot/logs/:/var/log/letsencrypt
       - ./dockerfiles/certbot/data:/usr/share/nginx/html/letsencrypt

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - ${MAILHOG_IP}:8025
    networks:
      - laravel

  phpmyadmin:
   image: phpmyadmin
   restart: always
   depends_on:
     - mariadb
   ports:
    - ${PHPMYADMIN_IP}:80
   networks:
    - laravel
   environment:
    - PMA_ARBITRARY=1
    - PMA_HOST=mariadb

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate
        
      - name: Run Testsuite
        run: vendor/bin/phpunit tests/

      - name: NPM Run Build
        run: npm install && npm run build
