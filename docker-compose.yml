version: '3'

networks:
  laravel:

services:
  apache:
    build:
      context: ./dockerfiles
      dockerfile: apache.dockerfile
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/apache/logs:/var/log/apache2/
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/${APP_FQDN}/
      - /etc/letsencrypt/:/etc/letsencrypt/
    depends_on:
      - mariadb
      - composer
      - npm
      - redis
      - websockets
      - artisan
      # - nginx
      # - certbot
      # - mailhog
      # - phpmyadmin
    networks:
      - laravel

  mariadb:
    image: mariadb:latest
    restart: unless-stopped
    tty: true
    expose:
      - ${DB_PORT}
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./src/storage/mysql/:/var/lib/mysql
    networks:
      - laravel

  composer:
    image: composer:latest
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages/
    working_dir: /var/www/html
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel
    user: 1000:1000

  npm:
    image: node:lts-alpine
    volumes:
      - ./src/:/var/www/html:delegated
      - ./src/storage/mysql:/var/lib/mysql
      - ./dockerfiles/localhost/:/var/www/certs
      - ./dockerfiles/npm/logs/:/root/.npm/_logs/
    expose:
      - ${NODE_PORT}
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel
    user: 1000:1000

  redis:
    image: redislabs/rejson:latest
    restart: unless-stopped
    volumes:
      - ./dockerfiles/redis/data:/data
    expose:
      - ${REDIS_PORT}
    networks:
      - laravel

  websockets:
    image: php:8.1.4RC1-fpm-alpine
    restart: unless-stopped
    expose:
      - ${LARAVEL_WEBSOCKETS_PORT}
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/localhost/:/var/www/certs
    working_dir: /var/www/html
    entrypoint: ["php", "artisan", "websockets:serve", "--port", "${LARAVEL_WEBSOCKETS_PORT}"]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: artisan.dockerfile
    volumes:
      - ./src/:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages
    depends_on:
      - mariadb
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
    user: 1000:1000

  # nginx:
  #   image: nginx:stable-alpine
  #   restart: always
  #   environment:
  #     APP_FQDN: ${APP_FQDN}
  #     HTTP_PORT: ${NGINX_HTTP_PORT}
  #     HTTPS_PORT: ${NGINX_HTTPS_PORT}
  #     WS_PORT: ${LARAVEL_WEBSOCKETS_PORT}
  #   volumes:
  #     - ./src:/var/www/html:delegated
  #     - ./dockerfiles/nginx/logs:/var/log/nginx
  #     - ./dockerfiles/nginx/templates/:/etc/nginx/templates
  #     - ./dockerfiles/localhost/:/etc/letsencrypt/live/${APP_FQDN}/
  #     - /etc/letsencrypt/:/etc/letsencrypt/
  #   expose:
  #     - ${NGINX_HTTP_PORT}
  #     - ${NGINX_HTTPS_PORT}
  #   networks:
  #     - laravel

  # certbot:
  #    image: certbot/certbot:latest
  #    command: certonly --webroot --webroot-path=/var/www/html/public --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${APP_FQDN} -v
  #    volumes:
  #      - ./src/:/var/www/html:delegated
  #      - /etc/letsencrypt/:/etc/letsencrypt/
  #      - ./dockerfiles/certbot/logs/:/var/log/letsencrypt
  #      - ./dockerfiles/certbot/data:/usr/share/nginx/html/letsencrypt

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports:
  #     - ${MAIL_PORT}:1025
  #     - ${MAILHOG_PORT}:8025
  #   networks:
  #     - laravel

  # phpmyadmin:
  #  image: phpmyadmin
  #  restart: always
  #  depends_on:
  #    - mariadb
  #  ports:
  #   - ${PHPMYADMIN_PORT}:80
  #  networks:
  #   - laravel
  #  environment:
  #   - PMA_ARBITRARY=1
  #   - PMA_HOST=mariadb